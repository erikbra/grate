# Heavyweight build and test
name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  build-netcore-tool:
    name: Build .NET Core (global) tool

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        include-prerelease: true
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      #run: dotnet pack ./grate/grate.csproj -c release -p:PackAsTool=true -p:PackageOutputPath=/tmp/grate/nupkg
      run: dotnet pack ./grate/grate.csproj -p:PackAsTool=true -p:PackageOutputPath=/tmp/grate/nupkg
      
    - name: Upload published tool artifact
      uses: actions/upload-artifact@v2
      with:
        name: grate-dotnet-tool
        path: /tmp/grate/nupkg/*   

  build-standalone:
    name: Build stand-alone

    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ "win-x64", "win-x86", "win-arm", "win-arm64", 
                "alpine-x64", "linux-x64", "linux-arm", "linux-arm64",
                 "osx.11.0-x64", "osx.10.12-x64", "osx-x64"
              ]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        include-prerelease: true

    - name: Publish self-contained ${{ matrix.arch }}
      run: dotnet publish ./grate/grate.csproj -r ${{ matrix.arch }} -c release --self-contained -p:SelfContained=true -o ./publish/${{ matrix.arch }}/self-contained

    - name: Publish .NET 6 dependent ${{ matrix.arch }}
      run: dotnet publish ./grate/grate.csproj -r ${{ matrix.arch }} -c release --no-self-contained -o ./publish/${{ matrix.arch }}/dependent

    - name: Upload self-contained ${{ matrix.arch }}
      uses: actions/upload-artifact@v2
      with:
        name: grate-${{ matrix.arch }}-self-contained
        path: ./publish/${{ matrix.arch }}/self-contained/*
    
    - name: Upload .net dependent ${{ matrix.arch }}
      uses: actions/upload-artifact@v2
      with:
        name: grate-${{ matrix.arch }}-framework-dependent
        path: ./publish/${{ matrix.arch }}/dependent/*


  test:
    name: Run tests

    runs-on: ubuntu-latest
    strategy:
      matrix:
        category: [ "Basic", "SqlServer", "PostgreSQL", "MariaDB" ]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        include-prerelease: true
    - name: Test
      run: dotnet test --filter Category=${{ matrix.category }} -c Release --logger:"junit;LogFilePath=test-results-${{ matrix.category }}.xml"
#      run:  dotnet test --verbosity Normal -c Release --logger "trx;LogFileName=/tmp/test-results/grate.unittests.trx"
      
    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results (${{ matrix.category }})
        path: grate.unittests/test-results-${{ matrix.category }}.xml

#  publish-test-results:
#    name: "Publish Unit Tests Results"
#    needs: test
#    runs-on: ubuntu-latest
#    # the build-and-test job might be skipped, we don't need to run this job then
#    if: success() || failure()
#
#    steps:
#      - name: Download Artifacts
#        uses: actions/download-artifact@v2
#        with:
#          path: artifacts
#
#      - name: Publish Unit Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v1
#        with:
#          files: artifacts/**/*.xml
