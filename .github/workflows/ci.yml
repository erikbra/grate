# This is alight weight build and test, suitable for rapid checks of commits on feature branches etc.
name: CI

on: 
  push: # Trigger on pushes to feature branches for safety before a PR
    branches-ignore:
      - main # don't run on main (build.yml handles that)
    paths-ignore:
      - docs/
  pull_request:
    branches:
      - main
    paths-ignore:
      - docs/
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-code:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore -r linux-x64 grate.unittests/grate.unittests.csproj
    - name: Build
      run: dotnet build --no-self-contained grate.unittests/grate.unittests.csproj -r linux-x64 --no-restore -c release -o bin/bin

    - name: Upload built binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        # Note the double bin/bin above. If you add more paths here, you should remove one 'bin', as if there's only one folder, the files are added to the zip root instead.
        path: |
          bin   
        retention-days: 1

  analyze:
    name: Analyze Code Security
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
  test:
    name: Run tests

    runs-on: ubuntu-latest
    needs: build-code

    strategy:
      fail-fast: false
      matrix:
        category: [ "Basic", "SqlServer", "PostgreSQL", "MariaDB", "Sqlite", "Oracle"  ]

    steps:
    - name: Download binaries
      uses: actions/download-artifact@v3
      with:
        name: binaries    
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Test
      run: dotnet test --filter "FullyQualifiedName~grate.unittests.${{ matrix.category }}" bin/grate.unittests.dll --logger:"trx;LogFileName=test-results-${{ matrix.category }}.xml" -- -MaxCpuCount 2
      env:
        LogLevel: Warning
        TZ: UTC

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.category }}
        #name: test-results
        path: TestResults/test-results-${{ matrix.category }}.xml
        retention-days: 1

